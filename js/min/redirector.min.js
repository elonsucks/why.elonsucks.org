(async()=>{let urls={all:function extractURLs(obj){var urls=[];if(Array.isArray(obj))for(var entry of obj)"string"==typeof entry?urls.push(entry):urls.push(...extractURLs(entry));else if(obj.url)urls.push(obj.url);else for(var val of Object.values(obj))urls.push(...extractURLs(val));return urls}(await(await fetch("assets/data/urls.json")).json()),visited:JSON.parse(localStorage.visitedURLs||"[]")};if(urls.unvisited=urls.all.filter(url=>!urls.visited.includes(url)),urls.unvisited.length||(urls.unvisited.push(...urls.all),urls.visited.length=0,localStorage.visitedURLs="[]"),urls.random=urls.unvisited[Math.floor(Math.random()*urls.unvisited.length)],location.search.startsWith("?debug")){let debugOutput=`<pre>Redirect URL (#${urls.unvisited.indexOf(urls.random)+1} of ${urls.unvisited.length} unvisited):
`+`<strong><a href="${urls.random}">${urls.random}</a></strong></pre>`;location.search.endsWith("=all")&&["unvisited","visited"].forEach(urlsType=>{var numberedURLs=JSON.stringify(urls[urlsType],void 0,2).replace(/"http/g,(match,offset,string)=>(string.slice(0,offset).match(/"http/g)||[]).length+1+'. "'+match.slice(1));debugOutput+=`<pre>urls.${urlsType} = ${numberedURLs.replace(new RegExp(`\\d+\\. "${urls.random}"`),'<strong style="color: #48b720">$&</strong>')}</pre>`}),document.body.innerHTML=debugOutput}else localStorage.visitedURLs=JSON.stringify([...urls.visited,urls.random]),document.location=urls.random})();